use full_moon::{
    ast::types::{ExportedTypeDeclaration, TypeDeclaration, TypeInfo},
    tokenizer::TokenReference,
};
use oas3::OpenApiV3Spec;

const HEADER_COMMENT: &str = "--[[
\tThis file was generated by openapi-luau.
\tDon't make manual changes.
]]\n";

pub fn generate_luau_types(spec: OpenApiV3Spec) -> Vec<TypeDeclaration> {
    let types = Vec::new();

    if let Some(components) = spec.components {
        println!("schemas");
        for (k, v) in components.schemas {
            let type_decl = TypeDeclaration::new(
                "Pet".parse::<TokenReference>().unwrap(),
                TypeInfo::Basic(TokenReference::symbol("string").unwrap()),
            );
            types.append(ExportedTypeDeclaration::new(type_decl));
        }
    }

    println!("{:?}", types);

    types
}
